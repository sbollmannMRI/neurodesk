name: singularity container builder

on:
  push:
    paths:
      - singularity/*
      - .github/workflows/singularity.yml
 
  pull_request:
    paths:
      - singularity/*
      - .github/workflows/singularity.yml

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Pull latest build from Github Packages
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u $GITHUB_ACTOR --password-stdin
          IMAGEID=docker.pkg.github.com/$GITHUB_REPOSITORY/singularity3
          IMAGEID=$(echo $IMAGEID | tr '[A-Z]' '[a-z]')
          {
            docker pull $IMAGEID \
              && ROOTFS_CACHE=$(docker inspect --format='{{.RootFS}}' $IMAGEID) \
              && echo "ROOTFS_CACHE=$ROOTFS_CACHE" >> $GITHUB_ENV
          } || echo "$IMAGEID not found. Resuming build..."
          echo "IMAGEID=$IMAGEID" >> $GITHUB_ENV
      - name: Build new image
        run: |
          SHORT_SHA=$(git rev-parse --short $GITHUB_SHA)
          cd singularity
          docker build . --file Dockerfile --tag $IMAGEID:$SHORT_SHA --cache-from $IMAGEID --label "GITHUB_REPOSITORY=$GITHUB_REPOSITORY" --label "GITHUB_SHA=$GITHUB_SHA"
          ROOTFS_NEW=$(docker inspect --format='{{.RootFS}}' $IMAGEID:$SHORT_SHA)
          BUILDDATE=`date +%Y%m%d`
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          echo "ROOTFS_NEW=$ROOTFS_NEW" >> $GITHUB_ENV
          echo "BUILDDATE=$BUILDDATE" >> $GITHUB_ENV
      - name: Push to Github packages (if changes found)
        if: env.GITHUB_REF == 'refs/heads/master' && env.ROOTFS_NEW != env.ROOTFS_CACHE
        run: |
          # Push to GH Packages
          docker tag $IMAGEID:$SHORT_SHA $IMAGEID:$BUILDDATE
          docker tag $IMAGEID:$SHORT_SHA $IMAGEID:latest
          docker push $IMAGEID:latest
          docker push $IMAGEID:$BUILDDATE
